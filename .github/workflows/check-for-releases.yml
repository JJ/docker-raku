name: Test-create and publish a Docker image to GitHub registries

on:
  push:
    paths:
      - Dockerfile
      - .github/workflows/check-for-releases.yml
  schedule:
    - cron: "0 1 1 * *"

jobs:
  check-last-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Check out source
        uses: actions/checkout@v4
      - name: Get release in Dockerfile
        id: dockerfile-version
        run: echo DOCKERFILE_VERSION=$(.github/workflows/get_release.pl)>> "$GITHUB_OUTPUT"
      - name: Get latest release
        id: latest-version
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const latestRelease = await github.rest.repos.getLatestRelease( {"rakudo","rakudo"} );
            core.info( `Latest release {latestRelease} ` );
            core.setOutput( "TAG_VERSION", latestRelease );
      - name: All good if they are the same
        if: ${{ steps.dockerfile-version.outputs.DOCKERFILE_VERSION == steps.latest-version.outputs.TAG_VERSION }}
        run: echo ::notice::üëç Up to date
      - name: Exit if they are not the same
        if: ${{ steps.dockerfile-version.outputs.DOCKERFILE_VERSION != steps.latest-version.outputs.TAG_VERSION }}
        env:
          DOCKERFILE_VERSION: ${{ steps.dockerfile-version.outputs.DOCKERFILE_VERSION }}
          TAG_VERSION: ${{ steps.latest-version.outputs.TAG_VERSION }}
        run: echo ::error::‚úñ Current version $DOCKERFILE_VERSION is not up to date with $TAG_VERSION && exit 1
